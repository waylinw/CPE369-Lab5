// Query 1
db.fudd.aggregate({"$group":{"_id":"$user", "totalGames":{"$sum":{"$cond":[{"$eq":["$action.actionNumber", 1]}, 1, 0]}}, "won":{"$sum":{"$cond":[{"$eq":["$action.gameStatus", "Win"]}, 1, 0]}}, "lost":{"$sum":{"$cond":[{"$eq":["$action.gameStatus", "Loss"]}, 1, 0]}}}}, {"$project": {"_id":0,"user":"$_id", "totalGames":1, "won":1, "lost":1}})

// Query 2
db.fudd.aggregate({"$sort":{"action.pointsAdded": -1}}, {"$limit":5})

// Query 3 NOT DONE
// needs to limit to games of top 5 moves 
db.fudd.aggregate({"$sort":{"action.pointsAdded": -1}}, {"$limit":5}, {"$group": {"_id":"$game", "user":{"$last":"$user"}, "score":{"$last": "$action.points"}}}, {"$project": {"_id": 0, "game":"$_id", "user":1, "score":1}})

db.fudd.aggregate({"$group": {"_id":"$game", "user":{"$last":"$user"}, "score":{"$last": "$action.points"}}}, {"$project": {"_id": 0, "game":"$_id", "user":1, "score":1}})

// Query 4
db.fudd.aggregate({"$match":{"action.actionType": "Move"}}, {$group : {"_id" :"$action.location", ct: {$sum :1}}}, {$sort: {ct: -1}}, {$limit: 10}, {$project : {"location":"$_id", "frequency": "$ct", _id:0}}).pretty()

// Query 5 NOT DONE
// ignores edge case
db.fudd.aggregate({"$match":{"action.actionType": "Move"}}, {"$group":{"_id":"$game", "user": {"$last":"$user"},"score":{"$last": "$action.points"}, 
"move": {"$addToSet":{"location":"$action.location", "actionNumber":"$action.actionNumber"}}}}).pretty()


// Query 5 needs to remove non-regular moves and set moves to null for edge case
db.fudd.aggregate({"$group":{"_id":"$game", "user": {"$last":"$user"},
"score": {"$last": {"$ifNull":["$action.points", 0]}}, 
"move": {"$addToSet":{"location":"$action.location", "actionNumber":"$action.actionNumber"}}}}).pretty()

